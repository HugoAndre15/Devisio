{% extends 'base.html.twig' %}

{% block title %}Nouveau devis - Devisio{% endblock %}
{% block page_title %}Nouveau devis{% endblock %}

{% block header_actions %}
    <a href="{{ path('app_quotes') }}" class="bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700 transition duration-200">
        <i class="fas fa-arrow-left mr-2"></i>
        Retour aux devis
    </a>
{% endblock %}

{% block body %}
    <div class="bg-white rounded-lg shadow">
        {{ form_start(form, {'attr': {'class': 'space-y-6', 'id': 'quote-form'}}) }}
            <div class="px-6 py-4 border-b border-gray-200">
                <h3 class="text-lg font-semibold text-gray-900">Informations générales</h3>
            </div>
            
            <div class="px-6 py-4 space-y-4">
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                        {{ form_label(form.customer, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-2'}}) }}
                        {{ form_widget(form.customer, {'attr': {'class': 'w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent'}}) }}
                        {{ form_errors(form.customer) }}
                    </div>
                    
                    <div>
                        {{ form_label(form.subject, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-2'}}) }}
                        {{ form_widget(form.subject, {'attr': {'class': 'w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent'}}) }}
                        {{ form_errors(form.subject) }}
                    </div>
                </div>
                
                <div>
                    {{ form_label(form.description, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-2'}}) }}
                    {{ form_widget(form.description, {'attr': {'class': 'w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent'}}) }}
                    {{ form_errors(form.description) }}
                </div>
                
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                        {{ form_label(form.quoteDate, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-2'}}) }}
                        {{ form_widget(form.quoteDate, {'attr': {'class': 'w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent'}}) }}
                        {{ form_errors(form.quoteDate) }}
                    </div>
                    
                    <div>
                        {{ form_label(form.validUntil, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-2'}}) }}
                        {{ form_widget(form.validUntil, {'attr': {'class': 'w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent'}}) }}
                        {{ form_errors(form.validUntil) }}
                    </div>
                </div>
            </div>

            <div class="px-6 py-4 border-t border-gray-200">
                <div class="flex justify-between items-center mb-4">
                    <h3 class="text-lg font-semibold text-gray-900">Produits et services</h3>
                    <button type="button" id="add-item" class="bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition duration-200">
                        <i class="fas fa-plus mr-2"></i>
                        Ajouter une ligne
                    </button>
                </div>
                
                <div id="quote-items" class="space-y-4">
                    {% for item in form.items %}
                        <div class="quote-item bg-gray-50 p-4 rounded-lg border">
                            <div class="flex justify-between items-start mb-4">
                                <h4 class="font-medium text-gray-900">Ligne {{ loop.index }}</h4>
                                <button type="button" class="remove-item text-red-600 hover:text-red-800">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                            
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                <div>
                                    {{ form_label(item.product, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-2'}}) }}
                                    {{ form_widget(item.product, {'attr': {'class': 'w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent'}}) }}
                                    {{ form_errors(item.product) }}
                                </div>
                                
                                <div>
                                    {{ form_label(item.productName, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-2'}}) }}
                                    {{ form_widget(item.productName, {'attr': {'class': 'w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent'}}) }}
                                    {{ form_errors(item.productName) }}
                                </div>
                            </div>
                            
                            <div class="mt-4">
                                {{ form_label(item.description, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-2'}}) }}
                                {{ form_widget(item.description, {'attr': {'class': 'w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent'}}) }}
                                {{ form_errors(item.description) }}
                            </div>
                            
                            <div class="grid grid-cols-1 md:grid-cols-4 gap-4 mt-4">
                                <div>
                                    {{ form_label(item.unitPrice, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-2'}}) }}
                                    {{ form_widget(item.unitPrice, {'attr': {'class': 'w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent'}}) }}
                                    {{ form_errors(item.unitPrice) }}
                                </div>
                                
                                <div>
                                    {{ form_label(item.quantity, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-2'}}) }}
                                    {{ form_widget(item.quantity, {'attr': {'class': 'w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent'}}) }}
                                    {{ form_errors(item.quantity) }}
                                </div>
                                
                                <div>
                                    {{ form_label(item.unit, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-2'}}) }}
                                    {{ form_widget(item.unit, {'attr': {'class': 'w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent'}}) }}
                                    {{ form_errors(item.unit) }}
                                </div>
                                
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-2">Total</label>
                                    <div class="w-full px-3 py-2 bg-gray-100 border border-gray-300 rounded-lg text-gray-700 item-total">
                                        0,00 €
                                    </div>
                                </div>
                            </div>
                        </div>
                    {% endfor %}
                </div>
            </div>

            <div class="px-6 py-4 border-t border-gray-200">
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                        {{ form_label(form.terms, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-2'}}) }}
                        {{ form_widget(form.terms, {'attr': {'class': 'w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent'}}) }}
                        {{ form_errors(form.terms) }}
                    </div>
                    
                    <div>
                        {{ form_label(form.notes, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-2'}}) }}
                        {{ form_widget(form.notes, {'attr': {'class': 'w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent'}}) }}
                        {{ form_errors(form.notes) }}
                    </div>
                </div>
            </div>

            <!-- Totaux -->
            <div class="px-6 py-4 border-t border-gray-200">
                <div class="flex justify-end">
                    <div class="w-full max-w-md">
                        <div class="bg-gray-50 p-4 rounded-lg">
                            <div class="flex justify-between items-center mb-2">
                                <span class="text-sm text-gray-600">Sous-total HT:</span>
                                <span class="text-sm font-medium" id="subtotal">0,00 €</span>
                            </div>
                            <div class="flex justify-between items-center mb-2">
                                <span class="text-sm text-gray-600">TVA (20%):</span>
                                <span class="text-sm font-medium" id="vat-amount">0,00 €</span>
                            </div>
                            <div class="flex justify-between items-center pt-2 border-t border-gray-200">
                                <span class="text-base font-semibold text-gray-900">Total TTC:</span>
                                <span class="text-base font-semibold text-primary-600" id="total">0,00 €</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="px-6 py-4 border-t border-gray-200 flex justify-between">
                <a href="{{ path('app_quotes') }}" class="bg-gray-600 text-white px-6 py-3 rounded-lg hover:bg-gray-700 transition duration-200">
                    <i class="fas fa-times mr-2"></i>
                    Annuler
                </a>
                
                <div class="space-x-3">
                    <button type="submit" name="action" value="save" class="bg-primary-600 text-white px-6 py-3 rounded-lg hover:bg-primary-700 transition duration-200">
                        <i class="fas fa-save mr-2"></i>
                        Enregistrer
                    </button>
                    <button type="submit" name="action" value="save_and_send" class="bg-green-600 text-white px-6 py-3 rounded-lg hover:bg-green-700 transition duration-200">
                        <i class="fas fa-paper-plane mr-2"></i>
                        Enregistrer et envoyer
                    </button>
                </div>
            </div>
        {{ form_end(form) }}
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('quote-form');
            const itemsContainer = document.getElementById('quote-items');
            const addItemBtn = document.getElementById('add-item');
            let itemIndex = {{ form.items|length }};

            // Add item functionality
            addItemBtn.addEventListener('click', function() {
                const prototype = itemsContainer.dataset.prototype;
                const newItem = prototype.replace(/__name__/g, itemIndex);
                
                const div = document.createElement('div');
                div.innerHTML = newItem;
                div.className = 'quote-item bg-gray-50 p-4 rounded-lg border';
                
                itemsContainer.appendChild(div);
                itemIndex++;
                
                // Add remove functionality to new item
                div.querySelector('.remove-item').addEventListener('click', function() {
                    div.remove();
                    calculateTotals();
                });
                
                // Add calculation listeners to new item
                addCalculationListeners(div);
            });

            // Remove item functionality
            document.querySelectorAll('.remove-item').forEach(button => {
                button.addEventListener('click', function() {
                    if (itemsContainer.children.length > 1) {
                        button.closest('.quote-item').remove();
                        calculateTotals();
                    }
                });
            });

            // Product selection functionality
            document.querySelectorAll('.product-select').forEach(select => {
                select.addEventListener('change', function() {
                    if (this.value) {
                        // Get product data via AJAX
                        fetch(`/api/products/${this.value}`)
                            .then(response => response.json())
                            .then(data => {
                                const item = this.closest('.quote-item');
                                item.querySelector('input[name*="[productName]"]').value = data.name;
                                item.querySelector('textarea[name*="[description]"]').value = data.description || '';
                                item.querySelector('input[name*="[unitPrice]"]').value = data.price;
                                item.querySelector('input[name*="[unit]"]').value = data.unit;
                                calculateItemTotal(item);
                            });
                    }
                });
            });

            // Add calculation listeners to existing items
            document.querySelectorAll('.quote-item').forEach(item => {
                addCalculationListeners(item);
            });

            function addCalculationListeners(item) {
                const priceInput = item.querySelector('input[name*="[unitPrice]"]');
                const quantityInput = item.querySelector('input[name*="[quantity]"]');
                
                [priceInput, quantityInput].forEach(input => {
                    if (input) {
                        input.addEventListener('input', function() {
                            calculateItemTotal(item);
                        });
                    }
                });
            }

            function calculateItemTotal(item) {
                const priceInput = item.querySelector('input[name*="[unitPrice]"]');
                const quantityInput = item.querySelector('input[name*="[quantity]"]');
                const totalDiv = item.querySelector('.item-total');
                
                if (priceInput && quantityInput && totalDiv) {
                    const price = parseFloat(priceInput.value) || 0;
                    const quantity = parseFloat(quantityInput.value) || 0;
                    const total = price * quantity;
                    
                    totalDiv.textContent = total.toLocaleString('fr-FR', {
                        style: 'currency',
                        currency: 'EUR'
                    });
                }
                
                calculateTotals();
            }

            function calculateTotals() {
                let subtotal = 0;
                
                document.querySelectorAll('.quote-item').forEach(item => {
                    const priceInput = item.querySelector('input[name*="[unitPrice]"]');
                    const quantityInput = item.querySelector('input[name*="[quantity]"]');
                    
                    if (priceInput && quantityInput) {
                        const price = parseFloat(priceInput.value) || 0;
                        const quantity = parseFloat(quantityInput.value) || 0;
                        subtotal += price * quantity;
                    }
                });
                
                const vatRate = 0.20; // 20% TVA
                const vatAmount = subtotal * vatRate;
                const total = subtotal + vatAmount;
                
                document.getElementById('subtotal').textContent = subtotal.toLocaleString('fr-FR', {
                    style: 'currency',
                    currency: 'EUR'
                });
                
                document.getElementById('vat-amount').textContent = vatAmount.toLocaleString('fr-FR', {
                    style: 'currency',
                    currency: 'EUR'
                });
                
                document.getElementById('total').textContent = total.toLocaleString('fr-FR', {
                    style: 'currency',
                    currency: 'EUR'
                });
            }

            // Initial calculation
            calculateTotals();
        });
    </script>
{% endblock %}